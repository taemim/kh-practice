-- [DDL]
-- 2022/01/26 과제풀이

--1. DEFAULT 컬럼이 있는 테이블 생성
CREATE TABLE TB_CATEGORY(
    NAME VARCHAR2(10)
  , USE_YN CHAR(1) DEFAULT 'y'
);
  
  
--2. PK 컬럼이 있는 테이블 생성
CREATE TABLE TB_CALSS_TYPE(
    NO VARCHAR2(5) PRIMARY KEY
  , NAME VARCHAR2(10)  
);


--3. 기본키 제약조건 추가
ALTER TABLE TB_CATEGORY
ADD CONSTRAINT PK_NAME PRIMARY KEY (NAME);


--4. NOT NULL 제약조건 추가
ALTER TABLE TB_CALSS_TYPE
MODIFY NAME NOT NULL;


--5. 컬럼 자료형 수정
ALTER TABLE TB_CATEGORY
MODIFY NO VARCHAR2(10)
MODIFY NAME VARCHAR2(20);

ALTER TABLE TB_CLASS_TYPE
MODIFY NO VARCHAR2(10);


--6.컬럼 이름 수정
ALTER TABLE TB_CATEGORY
RENAME COLUMN NAME TO CATEGORY_NAME; 

ALTER TABLE TB_CLASS_TYPE
RENAME COLUMN NO TO CLASS_TYPE_NO; 


--7. 컬럼 이름 수정
ALTER TABLE TB_CATEGORY
RENAME COLUMN CATEGORY_NAME TO PK_CATEGORY_NAME;

ALTER TABLE TB_CLASS_TYPE
RENAME COLUMN CLASS_TYPE_NO TO PK_CLASS_TYPE_NO;


--8. INSERT 행 추가
INSERT INTO TB_CATEGORY VALUES ('공학','Y');
INSERT INTO TB_CATEGORY VALUES ('자연과학','Y');
INSERT INTO TB_CATEGORY VALUES ('의학','Y');
INSERT INTO TB_CATEGORY VALUES ('예체능','Y');
INSERT INTO TB_CATEGORY VALUES ('인문사회','Y');
COMMIT;


--9. FK 제약조건 추가
ALTER TABLE TB_DEPARTMENT
ADD CONSTRAINT FK_DEPARTMENT_CATEGORY FOREIGN KEY (CATEGORY) 
REFERENCES TB_CATEGORY; 


--10. VIEW 생성하기
-- 시스템 계정에서 VIEW 생성 권한을 먼저 부여한다.
-- GRANT CREATE VIEW C##HOMEWORK; (권한부여)

CREATE VIEW VM_STUDENT_INFO
AS
SELECT 
  S.STUDENT_NO
, S.STUDENT_NAME
, S.STUDENT_ADDRESS
FROM TB_STUDENT S;

SELECT VM.*
FROM VM_STUDENT_INFO VM;

ROLLBACK;

-- 11. 지도면담 뷰 생성
CREATE VIEW VW_지도면담
(
  학생이름
, 학과이름
, 지도교수이름
)
AS
SELECT S.STUDENT_NAME
     , D.DEPARTMENT_NAME
     , P.PROFESSOR_NAME
  FROM TB_STUDENT S
  JOIN TB_DEPARTMENT D ON (S.DEPARTMENT_NO = D.DEPARTMENT_NO)
  LEFT JOIN TB_PROFESSOR P ON (S.COACH_PROFESSOR_NO = P.PROFESSOR_NO);

-- 뷰 테이블 확인
SELECT VW.*
  FROM VW_지도면담 VW;
  
-- 12. 학과별 학생수를 담은 뷰 생성
CREATE VIEW VW_학과별학생수
(
  DEPARTMENT_NAME
, STUDENT_COUNT
)
AS
SELECT 
       D.DEPARTMENT_NAME
     , COUNT(*)
  FROM TB_STUDENT S
  JOIN TB_DEPARTMENT D ON (S.DEPARTMENT_NO = D.DEPARTMENT_NO)
 GROUP BY D.DEPARTMENT_NAME;
 

SELECT VW.*
  FROM VW_학과별학생수 VW;
  
--13. 뷰 컬럼을 이용해 베이스 컬럼 UPDATE 
UPDATE VM_STUDENT_INFO 
   SET STUDENT_NAME = '한가인'
 WHERE STUDENT_NO = 'A213046';

SELECT * 
  FROM TB_STUDENT 
 WHERE STUDENT_NO= 'A213046';

--14. 뷰를 이용한 컬럼 변경을 막는 뷰 생성 (WITH READ ONLY)
CREATE OR REPLACE VIEW VM_학생일반정보
(
  학번
, 학생이름
, 학생주소
)
AS
SELECT 
  S.STUDENT_NO
, S.STUDENT_NAME
, S.STUDENT_ADDRESS
FROM TB_STUDENT S
WITH READ ONLY;

-- UPDATE 확인 (읽기 전용 뷰에서는 DML 작업을 수행할 수 없습니다.)
UPDATE VM_학생일반정보 
   SET 학생이름 = '김수현'
 WHERE 학번 = 'A213046';


-- 15. 2005년도 이후 최근 3년 사이에 수강생 누적 TOP 3 과목구하기
SELECT V.과목번호
     , V.과목이름
     , V."누적수강생수(명)"
 FROM ( SELECT 
               C.CLASS_NO 과목번호
             , C.CLASS_NAME 과목이름
             , COUNT(*) "누적수강생수(명)"
          FROM TB_CLASS C
          LEFT JOIN TB_GRADE G ON (C.CLASS_NO = G.CLASS_NO)
         WHERE EXTRACT(YEAR FROM TO_DATE(G.TERM_NO,'YYYYMM')) >= '2005'
         GROUP BY C.CLASS_NO, C.CLASS_NAME
         ORDER BY 3 DESC ) V
WHERE ROWNUM <= 3; 
 
SELECT
      G.TERM_NO
  FROM TB_GRADE G
 ORDER BY 1 DESC; 

 
ROLLBACK;